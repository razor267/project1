{"version":3,"sources":["hoc/withAuthRedirect.js","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileDataForm.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","module","exports","_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","ProfileStatusWithHooks","useState","editMode","setEditMode","status","SetStatus","useEffect","onDoubleClick","onChange","e","currentTarget","onBlur","updateStatus","autoFocus","ProfileDataFormReduxForm","reduxForm","form","handleSubmit","profile","error","onSubmit","className","style","formSummaryError","createField","Input","type","Textarea","keys","contacts","map","key","s","contact","ProfileData","isOwner","goToEditMode","onClick","fullName","lookingForAJob","lookingForAJobDescription","aboutMe","contactTitle","contactValue","Contact","ProfileInfo","savePhoto","saveProfile","descriptionBlock","src","photos","large","userPhoto","mainPhoto","target","files","initialValues","formData","then","Post","item","myAvatar","message","likesCount","maxLength10","maxLengthCreator","AddNewPostFormRedux","Field","name","placeholder","component","validate","required","MyPosts","postsElements","posts","reverse","p","id","postsBlock","values","newElementArrayId","addPost","newPostText","MyPostsContainer","profilePage","dispatch","addPostActionCreator","Profile","ProfileContainer","userId","match","params","authorizedUserId","history","getUserProfile","getStatus","refreshProfile","prevProps","compose","withRouter"],"mappings":"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","file":"static/js/4.98344168.chunk.js","sourcesContent":["import {Redirect} from \"react-router-dom\";\r\nimport React from \"react\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to='/login'/>;\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n\r\n    let ConnectedRedirectComponent=connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n\r\n    return ConnectedRedirectComponent;\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__3ejSf\",\"banner\":\"ProfileInfo_banner__2t18D\",\"mainPhoto\":\"ProfileInfo_mainPhoto__2misC\",\"contact\":\"ProfileInfo_contact__2w5ol\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__3s5Nc\",\"posts\":\"MyPosts_posts__15CeX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__umTW8\"};","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import React, {useEffect, useState} from \"react\";\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, SetStatus] = useState(props.status);\r\n\r\n    useEffect(() => {\r\n        SetStatus(props.status);\r\n    }, [props.status]);\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        SetStatus(e.currentTarget.value);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {!editMode &&\r\n            <div>\r\n                <b>Status: </b><span onDoubleClick={activateEditMode}>{props.status || 'Not status'}</span>\r\n            </div>\r\n            }\r\n            {editMode &&\r\n            <div>\r\n                <input onChange={onStatusChange} onBlur={deactivateEditMode} autoFocus={true}\r\n                       value={status}/>\r\n            </div>\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default ProfileStatusWithHooks;","import React from \"react\";\r\nimport s from \"./ProfileInfo.module.css\";\r\nimport {createField, Input, Textarea} from \"../../common/FormsControls/FormsControls\";\r\nimport {reduxForm} from \"redux-form\";\r\nimport style from \"../../common/FormsControls/FormsControls.module.css\";\r\n\r\n\r\nconst ProfileDataForm = ({handleSubmit, profile, error}) => {\r\n    return <form onSubmit={handleSubmit}>\r\n        <div>\r\n            <button>Save</button>\r\n        </div>\r\n        {error && <div className={style.formSummaryError}>\r\n            {error}\r\n        </div>}\r\n        <div>\r\n            <b>Full name:</b> {createField(\"Fullname\", \"fullName\", [], Input)}\r\n        </div>\r\n        <div>\r\n            <b>Looking for a job:</b> {createField(null, \"lookingForAJob\", null, Input, {type: \"checkbox\"})}\r\n        </div>\r\n        <div>\r\n            <b>My professional skills:</b> {createField(\"Description\", \"lookingForAJobDescription\", [], Textarea)}\r\n        </div>\r\n        <div>\r\n            <b>About me:</b> {createField(\"About me\", \"aboutMe\", [], Textarea)}\r\n        </div>\r\n        <div>\r\n            <b>Contacts:</b> {Object.keys(profile.contacts).map(key => {\r\n            return <div key={key} className={s.contact}>\r\n                <b>{key}:</b> {createField(key, \"contacts.\" + key, [], Input)}\r\n            </div>\r\n        })}\r\n        </div>\r\n    </form>\r\n}\r\n\r\nconst ProfileDataFormReduxForm = reduxForm({form: 'edit-profile'})(ProfileDataForm)\r\nexport default ProfileDataFormReduxForm;","import React, {useState} from \"react\";\r\nimport s from \"./ProfileInfo.module.css\";\r\nimport Loading from \"../../common/loading/loading\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\nimport userPhoto from \"../../../assets/images/avatar.jpg\";\r\nimport ProfileDataForm from \"./ProfileDataForm\";\r\n\r\nconst ProfileInfo = ({profile, status, updateStatus, isOwner, savePhoto, saveProfile}) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n\r\n    if (!profile) {\r\n        return <Loading/>\r\n    }\r\n\r\n    const onMainPhotoSelected = (e) => {\r\n        if (e.target.files.length) {\r\n            savePhoto(e.target.files[0]);\r\n        }\r\n    }\r\n\r\n    const onSubmit = (formData) => {\r\n        saveProfile(formData).then(() => {\r\n            setEditMode(false);\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className={s.descriptionBlock}>\r\n                <img src={profile.photos.large || userPhoto} className={s.mainPhoto}/>\r\n                {isOwner && <input type=\"file\" onChange={onMainPhotoSelected}/>}\r\n                <ProfileStatusWithHooks status={status} updateStatus={updateStatus}/>\r\n                {editMode\r\n                    ? <ProfileDataForm initialValues={profile} profile={profile} onSubmit={onSubmit}/>\r\n                    : <ProfileData profile={profile}\r\n                                   isOwner={isOwner}\r\n                                   goToEditMode={() => {\r\n                                       setEditMode(true)\r\n                                   }}/>}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst ProfileData = ({profile, isOwner, goToEditMode}) => {\r\n    return <div>\r\n        {isOwner &&\r\n        <div>\r\n            <button onClick={goToEditMode}>Edit</button>\r\n        </div>\r\n        }\r\n        <div>\r\n            <b>Full name:</b> {profile.fullName}\r\n        </div>\r\n        <div>\r\n            <b>Looking for a job:</b> {profile.lookingForAJob ? \"yes\" : \"no\"}\r\n        </div>\r\n        {profile.lookingForAJob &&\r\n        <div>\r\n            <b>My professional skills:</b> {profile.lookingForAJobDescription}\r\n        </div>\r\n        }\r\n        <div>\r\n            <b>About me:</b> {profile.aboutMe}\r\n        </div>\r\n        <div>\r\n            <b>Contacts:</b> {Object.keys(profile.contacts).map(key => {\r\n            return <Contact key={key} contactTitle={key} contactValue={profile.contacts[key]}/>\r\n        })}\r\n        </div>\r\n    </div>\r\n}\r\n\r\nconst Contact = ({contactTitle, contactValue}) => {\r\n    return <div className={s.contact}><b>{contactTitle}: </b> {contactValue}</div>\r\n}\r\n\r\nexport default ProfileInfo;","import React from \"react\";\r\nimport s from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div className={s.item}>\r\n            <img src={props.myAvatar}/>\r\n            {props.message}\r\n            <div>\r\n                <span>{props.likesCount} Like</span>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Post;","import React from \"react\";\r\nimport s from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\nimport {Field, reduxForm} from 'redux-form';\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\r\n\r\nconst maxLength10 = maxLengthCreator(10)\r\n\r\nconst MyPosts = (props) => {\r\n    if (!props.state.profile) {\r\n        return null\r\n    }\r\n\r\n    let postsElements = [...props.state.posts]\r\n        .reverse()\r\n        .map(p => <Post myAvatar={props.state.profile.photos.large} message={p.message}\r\n                        likesCount={p.likesCount} key={p.id}/>);\r\n\r\n    let addPost = (values) => {\r\n        let newElementArrayId = props.state.posts.length + 1;\r\n        props.addPost(newElementArrayId, values.newPostText);\r\n    }\r\n\r\n    return (\r\n        <div className={s.postsBlock}>\r\n            <h3> My posts</h3>\r\n            <AddNewPostFormRedux onSubmit={addPost}/>\r\n            <div className={s.posts}>\r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst AddNewPostForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field name='newPostText' placeholder='Enter your message' component={Textarea}\r\n                       validate={[required, maxLength10]}/>\r\n            </div>\r\n            <div>\r\n                <button>Add post</button>\r\n            </div>\r\n        </form>\r\n    );\r\n}\r\n\r\nconst AddNewPostFormRedux = reduxForm({form: 'ProfileAddNewPostForm'})(AddNewPostForm)\r\n\r\nexport default MyPosts;","import React from \"react\";\r\nimport {addPostActionCreator} from \"../../../redux/profileReducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        state: state.profilePage\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (id, newPostText)=>{\r\n            dispatch(addPostActionCreator(id, newPostText));\r\n        }\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;","import React from \"react\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div>\r\n            <ProfileInfo profile={props.profile}\r\n                         status={props.status}\r\n                         updateStatus={props.updateStatus}\r\n                         isOwner={props.isOwner}\r\n                         savePhoto={props.savePhoto}\r\n                         saveProfile={props.saveProfile}\r\n            />\r\n            <MyPostsContainer/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Profile;","import React from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getStatus, getUserProfile, savePhoto, saveProfile, updateStatus} from \"../../redux/profileReducer\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    refreshProfile() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n            if (!userId) {\r\n                this.props.history.push('/login');\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshProfile()\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (this.props.match.params.userId != prevProps.match.params.userId) {\r\n            this.refreshProfile()\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Profile {...this.props}\r\n                         profile={this.props.profile}\r\n                         status={this.props.status}\r\n                         updateStatus={this.props.updateStatus}\r\n                         isOwner={!this.props.match.params.userId}\r\n                         savePhoto={this.props.savePhoto}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus, savePhoto, saveProfile}),\r\n    withRouter,\r\n    // withAuthRedirect\r\n)(ProfileContainer);"],"sourceRoot":""}